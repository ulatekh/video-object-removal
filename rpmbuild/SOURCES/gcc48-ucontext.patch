From 883312dc79806f513275b72502231c751c14ff72 Mon Sep 17 00:00:00 2001
From: Joseph Myers <joseph@codesourcery.com>
Date: Wed, 28 Jun 2017 10:21:16 +0100
Subject: [PATCH] Use ucontext_t not struct ucontext in linux-unwind.h files.

Current glibc no longer gives the ucontext_t type the tag struct
ucontext, to conform with POSIX namespace rules.  This requires
various linux-unwind.h files in libgcc, that were previously using
struct ucontext, to be fixed to use ucontext_t instead.  This is
similar to the removal of the struct siginfo tag from siginfo_t some
years ago.

This patch changes those files to use ucontext_t instead.  As the
standard name that should be unconditionally safe, so this is not
restricted to architectures supported by glibc, or conditioned on the
glibc version.

Tested compilation together with current glibc with glibc's
build-many-glibcs.py.

	* config/aarch64/linux-unwind.h (aarch64_fallback_frame_state),
	config/alpha/linux-unwind.h (alpha_fallback_frame_state),
	config/bfin/linux-unwind.h (bfin_fallback_frame_state),
	config/i386/linux-unwind.h (x86_64_fallback_frame_state,
	x86_fallback_frame_state), config/m68k/linux-unwind.h (struct
	uw_ucontext), config/nios2/linux-unwind.h (struct nios2_ucontext),
	config/pa/linux-unwind.h (pa32_fallback_frame_state),
	config/riscv/linux-unwind.h (riscv_fallback_frame_state),
	config/sh/linux-unwind.h (sh_fallback_frame_state),
	config/tilepro/linux-unwind.h (tile_fallback_frame_state),
	config/xtensa/linux-unwind.h (xtensa_fallback_frame_state): Use
	ucontext_t instead of struct ucontext.

From-SVN: r249731
---
 libgcc/ChangeLog                     | 15 +++++++++++++++
 libgcc/config/aarch64/linux-unwind.h |  2 +-
 libgcc/config/alpha/linux-unwind.h   |  2 +-
 libgcc/config/bfin/linux-unwind.h    |  2 +-
 libgcc/config/i386/linux-unwind.h    |  4 ++--
 libgcc/config/m68k/linux-unwind.h    |  2 +-
 libgcc/config/nios2/linux-unwind.h   |  2 +-
 libgcc/config/pa/linux-unwind.h      |  2 +-
 libgcc/config/riscv/linux-unwind.h   |  2 +-
 libgcc/config/sh/linux-unwind.h      |  2 +-
 libgcc/config/tilepro/linux-unwind.h |  2 +-
 libgcc/config/xtensa/linux-unwind.h  |  2 +-
 12 files changed, 27 insertions(+), 12 deletions(-)

diff -ur gcc-4.8.2-20140120-orig/libgcc/config/aarch64/linux-unwind.h gcc-4.8.2-20140120/libgcc/config/aarch64/linux-unwind.h
--- gcc-4.8.2-20140120-orig/libgcc/config/aarch64/linux-unwind.h	2013-02-06 10:51:14.000000000 -0700
+++ gcc-4.8.2-20140120/libgcc/config/aarch64/linux-unwind.h	2020-04-04 22:07:40.847047012 -0700
@@ -39,7 +39,7 @@
   struct rt_sigframe
   {
     siginfo_t info;
-    struct ucontext uc;
+    ucontext_t uc;
   };
 
   struct rt_sigframe *rt_;
diff -ur gcc-4.8.2-20140120-orig/libgcc/config/alpha/linux-unwind.h gcc-4.8.2-20140120/libgcc/config/alpha/linux-unwind.h
--- gcc-4.8.2-20140120-orig/libgcc/config/alpha/linux-unwind.h	2013-02-06 10:50:44.000000000 -0700
+++ gcc-4.8.2-20140120/libgcc/config/alpha/linux-unwind.h	2020-04-04 22:07:40.855047143 -0700
@@ -51,7 +51,7 @@
     {
       struct rt_sigframe {
 	siginfo_t info;
-	struct ucontext uc;
+	ucontext_t uc;
       } *rt_ = context->cfa;
       sc = &rt_->uc.uc_mcontext;
     }
diff -ur gcc-4.8.2-20140120-orig/libgcc/config/bfin/linux-unwind.h gcc-4.8.2-20140120/libgcc/config/bfin/linux-unwind.h
--- gcc-4.8.2-20140120-orig/libgcc/config/bfin/linux-unwind.h	2013-02-06 10:54:03.000000000 -0700
+++ gcc-4.8.2-20140120/libgcc/config/bfin/linux-unwind.h	2020-04-04 22:07:40.859047209 -0700
@@ -52,7 +52,7 @@
 	void *puc;
 	char retcode[8];
 	siginfo_t info;
-	struct ucontext uc;
+	ucontext_t uc;
       } *rt_ = context->cfa;
 
       /* The void * cast is necessary to avoid an aliasing warning.
diff -ur gcc-4.8.2-20140120-orig/libgcc/config/i386/linux-unwind.h gcc-4.8.2-20140120/libgcc/config/i386/linux-unwind.h
--- gcc-4.8.2-20140120-orig/libgcc/config/i386/linux-unwind.h	2013-02-06 10:51:17.000000000 -0700
+++ gcc-4.8.2-20140120/libgcc/config/i386/linux-unwind.h	2020-04-04 22:07:40.865047307 -0700
@@ -58,7 +58,7 @@
   if (*(unsigned char *)(pc+0) == 0x48
       && *(unsigned long long *)(pc+1) == RT_SIGRETURN_SYSCALL)
     {
-      struct ucontext *uc_ = context->cfa;
+      ucontext_t *uc_ = context->cfa;
       /* The void * cast is necessary to avoid an aliasing warning.
          The aliasing warning is correct, but should not be a problem
          because it does not alias anything.  */
@@ -138,7 +138,7 @@
 	siginfo_t *pinfo;
 	void *puc;
 	siginfo_t info;
-	struct ucontext uc;
+	ucontext_t uc;
       } *rt_ = context->cfa;
       /* The void * cast is necessary to avoid an aliasing warning.
          The aliasing warning is correct, but should not be a problem
diff -ur gcc-4.8.2-20140120-orig/libgcc/config/m68k/linux-unwind.h gcc-4.8.2-20140120/libgcc/config/m68k/linux-unwind.h
--- gcc-4.8.2-20140120-orig/libgcc/config/m68k/linux-unwind.h	2013-02-06 10:51:12.000000000 -0700
+++ gcc-4.8.2-20140120/libgcc/config/m68k/linux-unwind.h	2020-04-04 22:07:40.869047373 -0700
@@ -33,7 +33,7 @@
 /* <sys/ucontext.h> is unfortunately broken right now.  */
 struct uw_ucontext {
 	unsigned long	  uc_flags;
-	struct ucontext  *uc_link;
+	ucontext_t	 *uc_link;
 	stack_t		  uc_stack;
 	mcontext_t	  uc_mcontext;
 	unsigned long	  uc_filler[80];
diff -ur gcc-4.8.2-20140120-orig/libgcc/config/pa/linux-unwind.h gcc-4.8.2-20140120/libgcc/config/pa/linux-unwind.h
--- gcc-4.8.2-20140120-orig/libgcc/config/pa/linux-unwind.h	2013-02-06 10:53:32.000000000 -0700
+++ gcc-4.8.2-20140120/libgcc/config/pa/linux-unwind.h	2020-04-04 22:07:40.872047422 -0700
@@ -64,7 +64,7 @@
   struct sigcontext *sc;
   struct rt_sigframe {
     siginfo_t info;
-    struct ucontext uc;
+    ucontext_t uc;
   } *frame;
 
   /* rt_sigreturn trampoline:
diff -ur gcc-4.8.2-20140120-orig/libgcc/config/sh/linux-unwind.h gcc-4.8.2-20140120/libgcc/config/sh/linux-unwind.h
--- gcc-4.8.2-20140120-orig/libgcc/config/sh/linux-unwind.h	2013-02-06 10:51:43.000000000 -0700
+++ gcc-4.8.2-20140120/libgcc/config/sh/linux-unwind.h	2020-04-04 22:07:40.875047471 -0700
@@ -180,7 +180,7 @@
     {
       struct rt_sigframe {
 	siginfo_t info;
-	struct ucontext uc;
+	ucontext_t uc;
       } *rt_ = context->cfa;
       /* The void * cast is necessary to avoid an aliasing warning.
          The aliasing warning is correct, but should not be a problem
diff -ur gcc-4.8.2-20140120-orig/libgcc/config/tilepro/linux-unwind.h gcc-4.8.2-20140120/libgcc/config/tilepro/linux-unwind.h
--- gcc-4.8.2-20140120-orig/libgcc/config/tilepro/linux-unwind.h	2013-02-06 10:51:47.000000000 -0700
+++ gcc-4.8.2-20140120/libgcc/config/tilepro/linux-unwind.h	2020-04-04 22:07:40.876047487 -0700
@@ -61,7 +61,7 @@
   struct rt_sigframe {
     unsigned char save_area[C_ABI_SAVE_AREA_SIZE];
     siginfo_t info;
-    struct ucontext uc;
+    ucontext_t uc;
   } *rt_;
 
   /* Return if this is not a signal handler.  */
diff -ur gcc-4.8.2-20140120-orig/libgcc/config/xtensa/linux-unwind.h gcc-4.8.2-20140120/libgcc/config/xtensa/linux-unwind.h
--- gcc-4.8.2-20140120-orig/libgcc/config/xtensa/linux-unwind.h	2013-02-06 10:53:37.000000000 -0700
+++ gcc-4.8.2-20140120/libgcc/config/xtensa/linux-unwind.h	2020-04-04 22:07:40.876047487 -0700
@@ -63,7 +63,7 @@
 
   struct rt_sigframe {
     siginfo_t info;
-    struct ucontext uc;
+    ucontext_t uc;
   } *rt_;
 
   /* movi a2, __NR_rt_sigreturn; syscall */
